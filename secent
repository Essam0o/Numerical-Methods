using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using System.Threading.Tasks;
using System.Windows.Forms;
using MathNet.Symbolics;

namespace Numerical_Project.Numerical_Methods
{
    public partial class secent_method : Form
    {
        public secent_method()
        {
            InitializeComponent();
        }
        private double f(double x)
        {
            string equationString = fxText.Text;
            SymbolicExpression equation = SymbolicExpression.Parse(equationString);
            Dictionary<string, FloatingPoint> variables = new Dictionary<string, FloatingPoint> { { "x", x } };
            double result = equation.Evaluate(variables).RealValue;
            return result;
        }




        private void calc_Click(object sender, EventArgs e)
        {

            listBox1.Items.Clear();

            double x0 = double.Parse(x0Text.Text);
            double x1 = double.Parse(xmin1Text.Text);
            double eps = double.Parse(errorText.Text);
            double xr = 0;
            double xrOld = 0;
            double error = 0;
            int iteration = 0;

            while (true)
            {
                // Evaluate the function at x0 and x1
                double f0 = f(x0);
                double f1 = f(x1);

                // Calculate the next approximation xr
                xrOld = xr;
                xr = x1 - f1 * (x1 - x0) / (f1 - f0);
                error = Math.Abs((xr - xrOld) / xr) * 100;

                // Add the iteration information to the data grid view
                string iterationString = $"iteration={iteration} |      xmin1={xmin1Text} |    x0={x0Text}  |  Error%={error}";
                listBox1.Items.Add(iterationString);
                // increase iter +++1

                iteration++;

                if (error < eps)
                {
                    root.Text = xr.ToString();
                    break;
                }

                // Shift the points for the next iteration
                x0 = x1;
                x1 = xr;
            }





        }

        private void button1_Click(object sender, EventArgs e)
        {
            fxText.Text = "0.95*x^3-5.9*x^2+10.9*x-6";
            errorText.Text = "0.5";
            x0Text.Text = "3.5";
            xmin1Text.Text = "2.5";


        }

        private void secent_method_Load(object sender, EventArgs e)
        {

        }
    }
}
